---
kind: pipeline
type: docker
name: default


workspace:
  path: /root

# clone:
#   # disable: true
#   git:
#     image: plugins/git
#     tags: true

# services:
#   - name: docker
#     image: docker:dind
#     privileged: true
#     volumes:
#       - name: dockersock
#         path: /var/run

volumes:
  - name: go-cache
    host:
      path: /var/lib/drone-cache/go
  - name: yarn-cache
    host:
      path: /var/lib/drone-cache/yarn
  - name: root
    temp: {}
  - name: dockersock
    temp: {}


image_pull_secrets:
- dockerconfigjson

# environment:
#   GOOGLE_APPLICATION_CREDENTIALS: /root/google_creds_deploy.json
#   DOCKER_CONFIG_JSON:
#     from_secret: dockerconfigjson
#   GOOGLE_CREDENTIALS:
#     from_secret: google_service_account_credentials
  # DRONE_GITEA_PRIVATE_MODE: "true"
  # DRONE_GITEA_SKIP_VERIFY: "false"


steps:
- name: env-setup
  image: golang:1.16.2
  pull: if-not-exists
  environment:
    # <<: *default_env
    DOCKER_CONFIG_JSON:
      from_secret: dockerconfigjson
    # GOOGLE_APPLICATION_CREDENTIALS: /root/google_creds_deploy.json
    # SECRET_KEY:
    #   from_secret: secret_key
    # KNOWN_HOSTS:
    #   from_secret: known_hosts
  commands:
    - go env -w GOPRIVATE='brank.as/*' CGO_ENABLED=0 GOCACHE=/go-cache/buildcache GOBIN=/root/bin GOFLAGS=-mod=readonly
    - ./scripts/lint-jira-tag
    - printf "Using Commit reference %s" "$DRONE_TAG"
    # Setup the docker config that all drone docker plugins will use. (includes dockerhub pro account credentials)
    - mkdir -p /root/.docker
    - printf "%s" "$DOCKER_CONFIG_JSON" > /root/.docker/config.json
    # - printf "%s" "$GOOGLE_CREDENTIALS" > $GOOGLE_APPLICATION_CREDENTIALS
    # - mkdir "$HOME/.ssh"
    # - echo "$SECRET_KEY" > "$HOME/.ssh/id_ed25519"
    # - chmod 600 "$HOME/.ssh/id_ed25519"
    # - echo "$KNOWN_HOSTS" > "$HOME/.ssh/known_hosts"
    # - chmod 600 "$HOME/.ssh/known_hosts"


- name: demoshop
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/demoshop
    context: ./demoshop
    dockerfile: ./demoshop/Dockerfile
    cache_from: asia.gcr.io/yokke-ipg/demoshop
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    # auto_tag: true
    # force_tag: true
    json_key:
      from_secret: google_service_account_credentials
  when:
    #branch: [master, development]
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]



- name: payment-service
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/payment-service
    context: ./payment-service
    dockerfile: ./payment-service/Dockerfile
    cache_from: "asia.gcr.io/yokke-ipg/payment-service:latest"
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]


- name: payment-webapp
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup, payment-service]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/payment-webapp
    context: ./payment-webapp
    dockerfile: ./payment-webapp/Dockerfile
    cache_from: "asia.gcr.io/yokke-ipg/payment-webapp:latest"
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: yarn-cache
    path: /home/node/node_modules
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]



- name: merchant-service
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup,payment-webapp]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/merchant-service
    context: ./merchant-service
    dockerfile: ./merchant-service/Dockerfile
    cache_from: "asia.gcr.io/yokke-ipg/merchant-service:latest"
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]


- name: merchant-webapp
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup,merchant-service]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/merchant-webapp
    context: ./merchant-webapp
    dockerfile: ./merchant-webapp/Dockerfile
    cache_from: "asia.gcr.io/yokke-ipg/merchant-webapp:latest"
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: yarn-cache
    path: /home/node/node_modules
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]


- name: settlement-service
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup,merchant-service]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/settlement-service
    context: ./settlement-service
    dockerfile: ./settlement-service/Dockerfile
    cache_from: "asia.gcr.io/yokke-ipg/settlement-service:latest"
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]


- name: documentation-portal
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/documentation-portal
    context: ./documentation-portal
    dockerfile: ./documentation-portal/Dockerfile
    cache_from: asia.gcr.io/yokke-ipg/documentation-portal
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]


- name: worker-mailer
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-mailer
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-mailer
    cache_from: asia.gcr.io/yokke-ipg/worker-mailer
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-democard
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-democard
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-democard
    cache_from: asia.gcr.io/yokke-ipg/worker-democard
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-mtiiso
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-mtiiso
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-mtiiso
    cache_from: asia.gcr.io/yokke-ipg/worker-mtiiso
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-linkaja
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-linkaja
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-linkaja
    cache_from: asia.gcr.io/yokke-ipg/worker-linkaja
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-ovo
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-ovo
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-ovo
    cache_from: asia.gcr.io/yokke-ipg/worker-ovo
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-mtidirectdebit
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-mtidirectdebit
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-mtidirectdebit
    cache_from: asia.gcr.io/yokke-ipg/worker-mtidirectdebit
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-mandiri
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-mandiri
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-mandiri
    cache_from: asia.gcr.io/yokke-ipg/worker-mandiri
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-disbursementfile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-disbursementfile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-disbursement-file
    cache_from: asia.gcr.io/yokke-ipg/worker-disbursementfile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-linkaja-settlement
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-linkaja-settlement
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-linkaja-settlement
    cache_from: asia.gcr.io/yokke-ipg/worker-linkaja-settlement
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-bricard-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-bricard-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-bricard-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-bricard-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-linkaja-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-linkaja-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-linkaja-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-linkaja-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-dana-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-dana-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-dana-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-dana-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-ovo-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-ovo-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-ovo-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-ovo-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-shopeepay-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-shopeepay-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-shopeepay-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-shopeepay-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-indodana-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-indodana-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-indodana-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-indodana-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-gopay-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-gopay-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-gopay-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-gopay-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-kredivo-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-kredivo-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-kredivo-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-kredivo-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-livinmerchant
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-livinmerchant
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-livinmerchant
    cache_from: asia.gcr.io/yokke-ipg/worker-livinmerchant
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-cybersource
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-cybersource
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-cybersource
    cache_from: asia.gcr.io/yokke-ipg/worker-cybersource
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-alfamartalgo
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-alfamartalgo
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-alfamartalgo
    cache_from: asia.gcr.io/yokke-ipg/worker-alfamartalgo
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-kredivo
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-kredivo
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-kredivo
    cache_from: asia.gcr.io/yokke-ipg/worker-kredivo
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]


- name: worker-shopeepay
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-shopeepay
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-shopeepay
    cache_from: asia.gcr.io/yokke-ipg/worker-shopeepay
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-indodana
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-indodana
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-indodana
    cache_from: asia.gcr.io/yokke-ipg/worker-indodana
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-atome
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-atome
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-atome
    cache_from: asia.gcr.io/yokke-ipg/worker-atome
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-gopay
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-gopay
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-gopay
    cache_from: asia.gcr.io/yokke-ipg/worker-gopay
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-cimb
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-cimb
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-cimb
    cache_from: asia.gcr.io/yokke-ipg/worker-cimb
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-mpgs
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-mpgs
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-mpgs
    cache_from: asia.gcr.io/yokke-ipg/worker-mpgs
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-dana
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-dana
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-dana
    cache_from: asia.gcr.io/yokke-ipg/worker-dana
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-bisnap
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-bisnap
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-bisnap
    cache_from: asia.gcr.io/yokke-ipg/worker-bisnap
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-snapva
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-snapva
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-snapva
    cache_from: asia.gcr.io/yokke-ipg/worker-snapva
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-snapserverva
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-snapserverva
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-snapserverva
    cache_from: asia.gcr.io/yokke-ipg/worker-snapserverva
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: snap-apiservice-va
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/snap-apiservice-va
    context: ./snap-apiservice
    dockerfile: ./snap-apiservice/Dockerfile-snap-apiservice-va
    cache_from: asia.gcr.io/yokke-ipg/snap-apiservice-va
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-snapdirectdebit
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  privileged: true
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-snapdirectdebit
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-snapdirectdebit
    cache_from: asia.gcr.io/yokke-ipg/worker-snapdirectdebit
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  volumes:
  - name: go-cache
    path: /go-cache
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-alfamartalgo-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-alfamartalgo-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-alfamartalgo-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-alfamartalgo-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: worker-atome-reconcile
  image: plugins/gcr
  pull: if-not-exists
  depends_on: [env-setup]
  settings:
    registry: asia.gcr.io
    repo: yokke-ipg/worker-atome-reconcile
    context: ./ipg-worker
    dockerfile: ./ipg-worker/Dockerfile-atome-reconcile
    cache_from: asia.gcr.io/yokke-ipg/worker-atome-reconcile
    tags: ["${DRONE_TAG:=${DRONE_BRANCH}}", "latest"]
    purge: False
    json_key:
      from_secret: google_service_account_credentials
  when:
    event: [tag, promote, rollback, push]
    ref: [refs/tags/*, refs/heads/master]

- name: deploy-notify
  depends_on: [env-setup, payment-service, payment-webapp]
  image: kenshaw/drone-mattermost:latest
  pull: if-not-exists
  settings:
    url: https://mattermost.brankas.dev
    token:
      from_secret: mattermost-token
    team: infra
    channel: town-square
    template: |-
      # {{uppercase (regexReplace "^master$" build.branch "staging")}} deployed
      **{{#success build.status}}Successfully deployed{{else}}FAILED{{/success}}** {{repo.owner}}/{{repo.name}} [`{{build.branch}}@{{truncate commit 7}}`]({{build.link}}) [[diff]({{commit.  link}})]
      Author: `{{commit.author.username}}`
      > {{commit.message.title}}{{#if commit.message.body}}
      >
      {{{regexReplace "(?m)^" commit.message.body "> "}}}{{/if}}
  when:
    event: [push, promote, rollback, tag]
    status: [success, failure]
    branch: [sandbox, production, release, release-*]
