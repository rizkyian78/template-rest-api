name: Docker Image CI

on:
  push:
    tags:
      - '[0-9]+.*'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIA2NRTVGVVQHVCJ3ND
        aws-secret-access-key: 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
        aws-region: us-east-1

    - name: Log in to Amazon ECR
      uses: docker/login-action@v1
      with:
        registry: 716294141291.dkr.ecr.us-east-1.amazonaws.com
        username: AWS
        password: eyJwYXlsb2FkIjoiaWVaRElPTFI0OVMvQUtUdVQ2L1JjcThCeHRLQXorOGswOFAxK2xpdUZQS213cTZEVnVzL3BMbEcxeU56R0NHZUNFaVdMemdVQU1Kc3NBcURINHRFYXRaQWxqd0tZUUZNczFmekV1VmJCSVUzbENrT2l2ZHQrRm5WZHprNGgySHdpcnhTMStEb2M3WmpXZHhlV29JeTNBUVhaTWF1aVdGZHVLQTYxMUdsejh0c3R0Z1cycS9DRFFhRGUxUEtpWUFMRXlzS0Z3SGJaK3NlVFNFemNKazhMeXN4ampGM0pSdVYzeVZ4YjRUcVV2c20yUzFxV0VXd2VHUG01KzU5RzIxWmY2cTVjcmdlbW5PTTJLc3AwSTVRSG9qcUpGOWtoNEtIZkdOK09qcjA3RXVaeXd3ZmpwSFU4UVFSQlY4T2c1NkFFODd6cTRNNkV5Vndjbm55M292NXl1aW9PYjJhYnplTEVpcmlzcnB4TGJqNG9NUnNzNlhQdzJvWnNockNXM0pUT3dsM01EQnVhQ2VqWUtOUTkva21IWmVMMnJmT0Q3NTFNOU0yOFBvbGxoNytIUkVBVzhUNENBaGM4VytyTHdDcE1jTDBqQitFOE1wRjZlN0FETU5ORXl0RUJjaFg5T0Jyemw0YzlNUUJjRFByVTlWOEJmbDN1UnVCTE0ySmVxQUlRZ0w4RlhWaVljOVFRbTF0bXVGb1gvamZvZVpmVkFMRDRGZ2pNd1FNRWJlbkNKQnF2K2VBLzdLRVRNYytoZmorMFRyN1NuZWY1dzYvOERKb0tCTDFzeDg3bXRacy9FWVU1ck05SzRodjdYdDRoNEU3OWNXUUh5ZTFnbzJaMHJKbllBS2JBT3hwM3Z4c2FoSzRrWTFoOERVQUIvckNTVnRUMVhxSWVHaDRXZFJKQlNTbGtKazYvWVVOQjhMcWVxMEhjZDFaVWdwdXNjbXNrUjZoMlMxWWxoakdEQkpSY0toRzc4RUEyVVdnVWZIQnQrY2hiaXpUWC9FZFNucWtjdUg2a3JOeS9nM1N0WWpnTTRFcEFBTkNRSUxKZFBXVVpCTVJQYjlPaFVhWmZBai82clNSdFlxOFZBb3JwVFY5ZWN2bFZCdXhvRzhNcGcvR1hiWGRua0NGSUdRWUNlUnZNTGJqQkxNWWRsa3g1K0t6V2FqZEljV2cwYUpvR0Q3Uy9yZ1lTQ3RaSGt0UElTUXVGSGc0bHg1SDdJaGVLempzZ1RRR0lEaUxyREZHeUxPZTVGQU5nNURHUTNFNnM0MFFwVkZpTmZWbVJqblFRbWhoL1ZJaXB5cmVlOXJHbW5EdW5JQ3JXN2x2cTJjTFJ4Zkp4ZEprM0pYQklCQW0rK0V3OGZWN3pjTXJLT0RKQ3NQUENEVDBIQ2dScGRyUXZVM1NoTENPSmptMS94bDRmQTNRQVd1Mk5oYTdHMmVMdDIzZHlmdjdoaFE2MlR1NHdFV3RTZm9aMW1BNzNadGRidzZWWXJPaVFRbERyOTdxemJVTkRDUCtIK1lad3lrUE5iOVJYZlAzZnBIOVlnTXpyN2VkZ0Z4T0lPMlN1dVNlZ2s0VWcyNXVYZGlxemdNZlFSQTBLcy9DMTBZNnJXanBNc0NyRjEybnlubElONDZrRm9IMSIsImRhdGFrZXkiOiJBUUVCQUhod20wWWFJU0plUnRKbTVuMUc2dXFlZWtYdW9YWFBlNVVGY2U5UnE4LzE0d0FBQUg0d2ZBWUpLb1pJaHZjTkFRY0dvRzh3YlFJQkFEQm9CZ2txaGtpRzl3MEJCd0V3SGdZSllJWklBV1VEQkFFdU1CRUVEUEJpbUtBTjFwZWc1aFZXRFFJQkVJQTc0SWN3ZFE1Q3hoMUhMVUZKbkwveURrbWR6YWZydjQ2UkJOem4wVEhqYlZleWhEbXJFd3NUOWZTTGJ4RUFiZ3BXSjVJSXUyYXhTdEtUWnhvPSIsInZlcnNpb24iOiIyIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTY4ODYwNzI1OH0=

    # - name: push Docker image
    #   env:
    #    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #    IMAGE_NAME: rizkyian78/test:${{ steps.tag.outputs.tagname }}
    #   run: |
    #       docker push $IMAGE_NAME
    #       echo "Tagged Latest Image $IMAGE_NAME"

    # - name: Log in to Amazon ECR
    #   uses: docker/login-action@v1
    #   with:
    #     registry: <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com
    #     username: AWS
    #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # - name: Extract tag name
    #   id: tag
    #   run: echo ::set-output name=tagname::$(basename ${{ github.ref }})

    # - uses: actions/checkout@v3
    # - name: Build the Docker image
    #   run: |
    #     docker build . --file ./Dockerfile-gateway --tag rizkyian78/test:${{ steps.tag.outputs.tagname }}